Coastal Act Team - 9/13/2019
============================

The purpose of this directory is to test/run the ESMF/NUOPC/NEMS couple system that
comprises COASTAL ACT coupling system. However, this instruction applies to other
models and other system hardware/software as well.   

The latest version of the NEMS has been cloned into current directory:

  git clone https://github.com/NOAA-EMC/NEMS
  
  git log
    commit e05bf2a554544093f02bf177658ad432cbafbaa8
    Merge: c8e05a8 95c63cb
    Author: RatkoVasic-NOAA <37597874+RatkoVasic-NOAA@users.noreply.github.com>
    Date:   Fri Sep 13 15:13:28 2019 -0400



Below instrutions are how to add a new model and compile with NEMS 
======================
Assuming:

ROOTDIR= NEMS_APP
NEMSDIR=$(ROOTDIR)/NEMS

Pull the latest NEMS from repository into a root directory in your computer (i.e. Hera):

1) cd <ROOTDIR>
2) git clone https://github.com/NOAA-EMC/NEMS
3) got to directory "NEMS/src/incmake/env" to see if your computing system is implemented (i.e. wcoss, rdhps, ...).

   Note that there are two types of such systems:
   case 1) the system contains many nodes such as rdhps with nodes such as hera, gaea, jet
   case 2) the system is an stand alone system such as wcoss
 
   If you do not see the name of your system, you must create it and register it as follow: 

   case 1)
   ========
   usually, a computing environment with many nodes has a name for the parent computer and
   each node has its own name. The parent and the node names are only some identifiers and
   the NEMS program doesn't care what they are called as long as you are consistant on using
   the same name in the right place.

   a) create the parent directory (i.e rdhpcs) in "NEMS/src/incmake/env"
   b) under parent directory you must create a makefile fragment with the name of the node 
      of interest (i.e. hera). You also need to know what compiler in the note you would like
      to use to compile your coupled model with (i.e. intel, gnu, ...). In the case of hera
      we created a makefile fragment called hera.intel.mk
   c) add the below contents to this file or copy and adjust the contents from similar file.
      MACHINE_ID=hera
      FULL_MACHINE_ID=hera
      USE_MODULES=YES
      DEFAULT_MODULE=$(FULL_MACHINE_ID)/ESMF_NUOPC
      BUILD_TARGET=$(FULL_MACHINE_ID).$(NEMS_COMPILER)
      NEMS_COMPILER=intel
      MODULE_LOGIC=$(call ULIMIT_MODULE_LOGIC,200000)

      Note: The third line, if set to "YES" means that the NEMS program will use the user defined
            module files which is defined on the fourth line. The location of this file is at:
            ROOTDIR/modulefiles/<hera>/ESMF_NUOPC - more on this is explained below. To recap,
            make sure the makefile fragment file name "hera.intel.mk" is represented in the contents
            as shown above.  
            See the file NEMS/src/incmake/configure_rules.mk for more information

   d) create a file named "detect.mk" file in the parent directory (i.e. "NEMS/src/incmake/env/rdhpcs").
      The contents of the detect.mk file is a little hard to explain. In summary, you have to add 
      such statements where each node can be identified uniquely.

      For example, hera node is identified by mounted file systems such as /scratch1 and /scratch2 versus
      other nodes under the rdhpcs parent system. So, we had to add below statements to the detect.mk:

      ifneq (,$(and $(wildcard /scratch1),$(wildcard /scratch2)))
        NEMS_COMPILER?=intel
        $(call add_build_env,hera.$(NEMS_COMPILER),env/rdhpcs/hera.$(NEMS_COMPILER).mk)
      
      Note that NEMS_COMPILER must be the name of the compiler you have selected and the path to the 
      makefile fragment must be registered by the call to the "add_build_env" function as shown.

   e) check the file NEMS/src/incmake/buildenv.mk and add this line anywhere above the uname/detect.mk
      line in this file. The uname/detect.mk is executed if NEMS program can not locate your correct
      detect.mk file.

      include $(call locate_incmake_file,env/rdhpcs/detect.mk)
      include $(call locate_incmake_file,env/uname/detect.mk)

   If you do not have your system included, you will get an error from this file:
   NEMS/src/incmake/buildenv.mk
  
   case 2)
   =======
   This case is same as case 1 whare the parent name and the node name are the same.
   For example look at the wcoss in "NEMS/src/incmake/env" directory to see this structure:
   	NEMS/src/incmake/env/
  		wcoss/
			wcoss.intel.mk
			detect.mk
   
    
4) create 4 directories: compsets\  conf\  modulefiles\  parm\ in ROOTDIR, if they do not exist.
   you should have 5 directories, including NEMS
	
5) Go to the modulefiles directory and create user modulefile, mentioned in step 3) item c.

   a) cd <ROOTDIR>/modulefiles
   b) create a directory called "hera"
   c) copy/create a module file called "ESMF_NUOPC" - Note that this file is to set the
      compilation environments for this version of the NEMS and your coupled models. The module file
      name can be any name, however, the directory modulefiles is constant.
      See <ROOTDIR>/modulefiles/hera/ESMF_NUOPC for the contents and adjust yours based on your system. 

      Note that during runtime the contents of this file will be copied into "NEMS/src/conf/modules.nems"

6) Go to user created conf directory and create another makefile fragment

   a) cd <ROOTDIR>/conf
   b) create a configuration file called "configure.nems.hera.intel". Notice the "hera.intel" which must
      be same as your computer and the selected compiler. This makefile fragment is common to all the 
      coupled models as well as esmf,  nuopc , netcdf, external libs, ...

   Note: make sure CC, FC and F77 are set to the intended compilers.

    
7) Go to ROOTDIR directory ( this section applies to any other model cap such as ADCIRC, WW3, ...)

   a) copy source code of your model, aka. NEMS APP or CAP, into this directory (i.e. cp -r NWM .)

8) Go to NEMS/src/incmake system directory and 
   a) copy the file "example_component_FOO.mk" to "component_<Model>.mk" (i.e. component_NWM.mk)
   b) edit the file by changing the word "FOO" to <Model> and "foo" to <model> (i.e. NWM  and nwm)
   c) edit the file further to add model specific make file options (i.e. see component_NWM.mk)

      Note: This step is not vey intuitive, please, consult make files of the existing model caps 
            such as: <ROOTDIR>/NWM/trunk/NDHMS/CPL/NUOPC_cpl/Makefile around line 200, makefile rule
            $(CAP_MK):
            @echo "ESMF_DEP_FRONT     = nwm_nuopc_cap" >> nwm.mk

            such as: <ROOTDIR>/ADCIRC/cpl/nuopc/makefile.adc_cap.nuopc lines 73-95
              
9) Edit the file "NEMS/src/module_EARTH_GRID_COMP.F90 and add similar statements with your model name
   to two places in this file:

   #ifdef FRONT_NWM
      use FRONT_NWM,        only: NWM_SS  => SetServices
   #endif

   AND further down the file also add:

   #ifdef FRONT_NWM
            call NUOPC_DriverAddComp(driver, trim(prefix), NWM_SS, &
              petList=petList, comp=comp, rc=rc)
            if (ESMF_LogFoundError(rcToCheck=rc, msg=ESMF_LOGERR_PASSTHRU, &
              line=__LINE__, file=trim(name)//":"//__FILE__)) return  !  bail out
   #else
            write (msg, *) "Model '", trim(model), "' was requested, "// &
              "but is not available in the executable!"
            call ESMF_LogSetError(ESMF_RC_NOT_VALID, msg=msg, line=__LINE__, &
              file=__FILE__, rcToReturn=rc)
            return  ! bail out
   #endif

   Note: By adding the above statements your model/cap integrates into the NEMS system.
 

To build NEMS:
===============

1) got to: <NEMSDIR>
   clean and/or distclean before compiling........
2) make -f GNUmakefile distclean_ADCIRC COMPONENTS="ADCIRC"
   make -f GNUmakefile distclean_NWM COMPONENTS="NWM"
   make -f GNUmakefile distclean_WW3DATA COMPONENTS="WW3DATA"
   make -f GNUmakefile distclean_ATMESH COMPONENTS="ATMESH"
   make -f GNUmakefile distclean_NEMS COMPONENTS="NEMS"
3) make -f GNUmakefile build COMPONENTS="ADCIRC WW3DATA ATMESH NWM"
   make -f GNUmakefile build COMPONENTS="ADCIRC"

OR simply, add the new model to <ROOTDIR>/build.sh and while in
   <ROOTDIR> type: ./build.sh


TO run NEMS: TODO - not complete
============
1) create a RUNDIRectoy (better be outside of NEMSDIR!!)
2) copy all the input files/environ files/config files/etc/ 
   required by all the coupled models into <RUNDIR>
3) copy <ROOTDIR>nsem.job into <RUNDIR>
4) edit nsem.job file to adjsut the <ROOTDIR> and the NODE/TASK options
   per model_configure and nems.configure files
5) help yourself to edit any other variables in nsem.job file as needed
6) then run the command > sbatch nsem.job
7) check the process > squeue -u $USER



Please add contents as needed into <ROOTDIR>.gitignore file:

There are two configuration files, required by NEMS to run. Example of these
two files are located in this directory for your information.
To use them, you should copy and rename them to exclude the ".sample". 
These two files are hard coded into the NEMS source codes and expected files 
names are: model_configure and nems.configure

The file <ROOTDIR>nsem.job.sample is an example of SLURM job batch file when
you are ready to run the NEMS and its coupled models on Hera.
To submit the job type: sbatch nems.job
